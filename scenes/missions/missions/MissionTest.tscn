[gd_scene load_steps=15 format=2]

[ext_resource path="res://scripts/missions/ObjectiveReachArea.gd" type="Script" id=1]
[ext_resource path="res://art/audio/dialogs/test/mission_test_1_v2.mp3" type="AudioStream" id=2]
[ext_resource path="res://scripts/dialogs/DialogPart.gd" type="Script" id=3]
[ext_resource path="res://scripts/missions/ObjectiveManager.gd" type="Script" id=4]
[ext_resource path="res://scripts/missions/MissionManager.gd" type="Script" id=5]
[ext_resource path="res://art/audio/dialogs/test/mission_test_2_v2.mp3" type="AudioStream" id=6]
[ext_resource path="res://scenes/tools/dialogManager.tscn" type="PackedScene" id=7]
[ext_resource path="res://scenes/npc/npcRigid.tscn" type="PackedScene" id=8]
[ext_resource path="res://scenes/tools/influeceArea.tscn" type="PackedScene" id=9]
[ext_resource path="res://scenes/npc/predefinedNpcPath.tscn" type="PackedScene" id=10]
[ext_resource path="res://art/audio/music/SHAR/The Simpsons Hit & Run Soundtrack - Homer's Day.mp3" type="AudioStream" id=13]

[sub_resource type="GDScript" id=5]
script/source = "extends Area

signal influence_entered

export var animated : bool = true
export var color : Color
export var collide_with_player : bool = false
export var collide_with_player_car : bool = false
export var collide_with_npc : bool = false
export var collide_with_npc_car : bool = false

func _ready() -> void:
	$influence.get_surface_material(0).set_shader_param(\"albedo\", color)
	$influence.get_surface_material(0).set_shader_param(\"emission_color\", color)

	if(animated):
		$AnimationPlayer.play(\"idle\")
	
	if(collide_with_player):
		collision_mask += CollisionEnums.COLLISION_PLAYER
	elif(collide_with_player_car):
		collision_mask += CollisionEnums.COLLISION_PLAYER_CAR
	elif(collide_with_npc):
		collision_mask += CollisionEnums.COLLISION_NPC
	elif(collide_with_npc_car):
		collision_mask += CollisionEnums.COLLISION_NPC_CAR

#func set_color(new_color : Color) -> void:
#	$influence.get_surface_material(0).set_shader_param(\"albedo\", new_color)
#	$influence.get_surface_material(0).set_shader_param(\"emission_color\", new_color)

func _on_influenceArea_body_entered(body: Node) -> void:
	if(body.collision_layer == CollisionEnums.COLLISION_PLAYER
	or body.collision_layer == CollisionEnums.COLLISION_PLAYER_CAR
	or body.collision_layer == CollisionEnums.COLLISION_NPC
	or body.collision_layer == CollisionEnums.COLLISION_NPC_CAR):
		print(body)
		emit_signal(\"influence_entered\", body, self)
"

[sub_resource type="GDScript" id=20]
script/source = "extends RigidBody

signal mission_assigned

onready var ai_path : PathAI = null
onready var current_path_point : Area = null
onready var current_path_point_index : int = 0
onready var speed : float = 3.0
onready var gravity_speed : float = 0.0
onready var mission_assigned : bool = false
onready var ragdoll : bool = false
onready var ragdoll_time : float = 0.0
onready var panic : bool = false
onready var panic_time : float = 0.0
onready var looking_at_player : bool = false
onready var panic_direction : Vector3 = Vector3(rand_range(-1.0, 1.0), 0, rand_range(-1.0, 1.0)).normalized()
onready var panic_dir_time : float = 0.0

func _ready() -> void:
	randomize()
#	ai_path = get_parent().get_node(\"AIPaths/NpcPathAI\")
	if(get_parent() is MissionManager):
		$mission.visible = true
		
func _input(event: InputEvent) -> void:
	if(event.is_action_pressed(\"ui_action\") and looking_at_player and !mission_assigned):
		get_parent().UI.get_node(\"generalUI/action\").visible = false
		$mission.visible = false
		mission_assigned = true
		emit_signal(\"mission_assigned\")
	
func set_ai_path(new_path : PathAI) -> void:
	ai_path = new_path
	current_path_point = new_path.path_points[0]
	
func look_at_direction(direction : Vector2) -> void:
	var origin_2d : Vector2 = Vector2(global_transform.origin.x, global_transform.origin.z)
	var angle : float = origin_2d.angle_to_point(direction)
	$Mesh.rotation.y = angle
	$Mesh.rotation.y -= rad2deg(90)

func _physics_process(delta: float) -> void:
	if($isOnFloor.get_collider() == null):
		gravity_speed -= 0.09
	else:
		gravity_speed = -0.1
		
	if(current_path_point != null and !ragdoll and !panic and !looking_at_player):
		var to_position : Vector3 = -(global_transform.origin - current_path_point.global_transform.origin)
		var direction : Vector3 = to_position.normalized()
		var direction_2d : Vector3 = Vector3(direction.x, gravity_speed, direction.z)
		var gravity : float = 0.09
		linear_velocity = direction_2d * speed
		look_at_direction(Vector2(current_path_point.global_transform.origin.x, current_path_point.global_transform.origin.z))
	elif(ragdoll):
		ragdoll_time += delta
		if(linear_velocity.length() < 0.1 or ragdoll_time >= rand_range(2.5, 4.5)):
			linear_velocity = Vector3.ZERO
			ragdoll = false
			panic = true
			rotation_degrees = Vector3(0, rotation_degrees.y, 0)
			mode = RigidBody.MODE_CHARACTER
			transform.origin.y += 0.5
	elif(panic):
		panic_time += delta
		panic_dir_time += delta
		linear_velocity = panic_direction * 12
		
		if(panic_dir_time >= rand_range(0.5, 1.24)):
			panic_direction = Vector3(rand_range(-1.0, 1.0), gravity_speed, rand_range(-1.0, 1.0)).normalized()
			panic_dir_time = 0.0
			
		if(panic_time >= rand_range(3.5, 6.5)):
			panic = false
			panic_dir_time = 0.0
			panic_time = 0.0
	elif(looking_at_player):
		# TODO: Look at player
		pass
		
func _on_npc_body_entered(body: Node) -> void:
	if(body.collision_layer == CollisionEnums.COLLISION_NPC_CAR
	or body.collision_layer == CollisionEnums.COLLISION_PLAYER
	or body.collision_layer == CollisionEnums.COLLISION_PLAYER_CAR):
		ragdoll = true
		panic = false
		looking_at_player = false
		mode = RigidBody.MODE_RIGID
		ragdoll_time = 0.0
		panic_dir_time = 0.0
		panic_time = 0.0

func _on_Area_body_entered(body: Node) -> void:
	if(body.collision_layer == CollisionEnums.COLLISION_PLAYER
	and !ragdoll and !panic):
		looking_at_player = true
		if(get_parent() is MissionManager and !mission_assigned):
			get_parent().UI.get_node(\"generalUI/action\").visible = true

func _on_Area_body_exited(body: Node) -> void:
	if(body.collision_layer == CollisionEnums.COLLISION_PLAYER
	and !ragdoll and !panic and looking_at_player):
		looking_at_player = false
	if(get_parent() is MissionManager and !mission_assigned):
			get_parent().UI.get_node(\"generalUI/action\").visible = false
"

[sub_resource type="GDScript" id=21]
script/source = "extends Spatial

signal dialog_finished

export var character_1_path : NodePath
export var character_2_path : NodePath
export var character_1_height_offset : float = 0.0
export var character_2_height_offset : float = 0.0

onready var character_1 : Spatial = get_node(character_1_path)
onready var character_2 : Spatial = get_node(character_2_path)

onready var dialog_parts : Array = []
onready var current_dialog_part : int = 0

func _ready() -> void:
	$character1Position.global_transform.origin.y += character_1_height_offset
	$character2Position.global_transform.origin.y += character_2_height_offset
	
	for child in get_children():
		if(child is DialogPart):
			dialog_parts.append(child)
			
func start() -> void:
	get_parent().UI.get_node(\"missionUI\").start_cinematic()
	get_parent().UI.get_node(\"carUI\").visible = false
	get_parent().UI.get_node(\"generalUI\").visible = false
	$Camera.current = true
	character_1.global_transform.origin = $character1Position.global_transform.origin
	character_2.global_transform.origin = $character2Position.global_transform.origin
	
	character_1.set_physics_process(false)
	character_2.set_physics_process(false)
	\"res://resources/fonts/data/coolvetica.ttf\"
	if(character_1.collision_layer == CollisionEnums.COLLISION_NPC):
		character_1.axis_lock_linear_x = true
		character_1.axis_lock_linear_y = true
		character_1.axis_lock_linear_z = true
	elif(character_2.collision_layer == CollisionEnums.COLLISION_NPC):
		character_2.axis_lock_linear_x = true
		character_2.axis_lock_linear_y = true
		character_2.axis_lock_linear_z = true
		
	play_dialog()
	
func end() -> void:
	character_1.set_physics_process(true)
	character_2.set_physics_process(true)
	$Camera.current = false
	if(character_1.collision_layer == CollisionEnums.COLLISION_PLAYER):
		character_1.get_node(\"camPivotY/camPivotX/Camera\").current = true
	elif(character_1.collision_layer == CollisionEnums.COLLISION_NPC):
		character_1.axis_lock_linear_x = false
		character_1.axis_lock_linear_y = false
		character_1.axis_lock_linear_z = false
		
	if(character_2.collision_layer == CollisionEnums.COLLISION_PLAYER):
		character_2.get_node(\"camPivotY/camPivotX/Camera\").current = true
	elif(character_2.collision_layer == CollisionEnums.COLLISION_NPC):
		character_2.axis_lock_linear_x = false
		character_2.axis_lock_linear_y = false
		character_2.axis_lock_linear_z = false
		
	get_parent().UI.get_node(\"generalUI\").visible = true
	get_parent().UI.get_node(\"missionUI\").end_cinematic()
	emit_signal(\"dialog_finished\")
	
func play_dialog() -> void:
	var dialog : DialogPart = dialog_parts[current_dialog_part]
	var dialog_audio = AudioStreamPlayer.new()
	dialog_audio.stream = dialog.dialog_audio
	dialog_audio.connect(\"finished\", self, \"next_dialog\", [dialog])
	
	yield(get_tree().create_timer(dialog.intro_delay), \"timeout\")
	
	if(dialog.character_talking == dialog.CHARACTER_TALKING_1):
		$Camera.look_at_from_position($character1CamPos.global_transform.origin, $character1Position.global_transform.origin, Vector3(0, 1, 0))
#		dialog_audio.global_transform.origin = $character1Position.global_transform.origin
	elif(dialog.character_talking == dialog.CHARACTER_TALKING_2):
		$Camera.look_at_from_position($character2CamPos.global_transform.origin, $character2Position.global_transform.origin, Vector3(0, 1, 0))
#		dialog_audio.global_transform.origin = $character2Position.global_transform.origin
	
	add_child(dialog_audio)
	dialog_audio.play()
	
func next_dialog(previous_dialog : DialogPart):
	if(current_dialog_part < dialog_parts.size() -1):
		yield(get_tree().create_timer(previous_dialog.next_dialog_delay), \"timeout\")
		current_dialog_part += 1
		play_dialog()
	else:
		end()
	
"

[node name="Mission0" type="Node"]
script = ExtResource( 5 )
next_mission_id = 1

[node name="ObjectiveManager" type="Spatial" parent="."]
script = ExtResource( 4 )

[node name="ObjectiveReachArea" type="Spatial" parent="ObjectiveManager"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -0.938891, 0, -2.13718 )
script = ExtResource( 1 )
same_music_as_last_objective = false
music = ExtResource( 13 )

[node name="influenceArea" parent="ObjectiveManager/ObjectiveReachArea" instance=ExtResource( 9 )]
script = SubResource( 5 )
color = Color( 1, 0, 0, 1 )
collide_with_player = true
collide_with_player_car = true

[node name="ObjectiveReachArea2" type="Spatial" parent="ObjectiveManager"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -56.7108, 1.90735e-06, -2.41632 )
script = ExtResource( 1 )

[node name="influenceArea" parent="ObjectiveManager/ObjectiveReachArea2" instance=ExtResource( 9 )]
script = SubResource( 5 )
color = Color( 1, 0, 0, 1 )
collide_with_player = true
collide_with_player_car = true

[node name="ObjectiveReachArea3" type="Spatial" parent="ObjectiveManager"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -56.9039, 1.90735e-06, -43.5381 )
script = ExtResource( 1 )

[node name="influenceArea" parent="ObjectiveManager/ObjectiveReachArea3" instance=ExtResource( 9 )]
script = SubResource( 5 )
color = Color( 1, 0, 0, 1 )
collide_with_player = true
collide_with_player_car = true

[node name="ObjectiveReachArea4" type="Spatial" parent="ObjectiveManager"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 1.16915, 1.90735e-06, -41.8865 )
script = ExtResource( 1 )

[node name="influenceArea" parent="ObjectiveManager/ObjectiveReachArea4" instance=ExtResource( 9 )]
script = SubResource( 5 )
color = Color( 1, 0, 0, 1 )
collide_with_player = true
collide_with_player_car = true

[node name="npcRigid" parent="." instance=ExtResource( 8 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 7.65702, 1.00255, -54.0223 )
script = SubResource( 20 )

[node name="predefinedNpcPath" parent="." instance=ExtResource( 10 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 9.57517, -0.0461521, -53.7104 )

[node name="dialogManager" parent="." instance=ExtResource( 7 )]
transform = Transform( -4.37114e-08, 0, 1, 0, 1, 0, -1, 0, -4.37114e-08, 7.7203, 1.27325, -54.175 )
script = SubResource( 21 )
character_1_path = NodePath("../npcRigid")
character_2_path = NodePath("../../../player")

[node name="DialogPart" type="Node" parent="dialogManager"]
script = ExtResource( 3 )
dialog_audio = ExtResource( 2 )
next_dialog_delay = 0.8

[node name="DialogPart2" type="Node" parent="dialogManager"]
script = ExtResource( 3 )
character_talking = 1
dialog_audio = ExtResource( 6 )
